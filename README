
The source to WeScheme can be found at github:

   https://github.com/dyoo/WeScheme

The user-level documentation for the project is maintained in:

   https://github.com/dyoo/wescheme-docs


----------------------------------------------------------------------
Build dependencies:

1.  Java SDK should be installed and in $PATH.


2.  WeScheme runs on Google AppEngine 1.4.2 or later.  You'll probably
need to add the plugins into eclipse.

    http://code.google.com/appengine/downloads.html#Download_the_Google_Plugin_for_Eclipse


To verify that the installation went ok, you may want to walk through the first few steps of:

   http://code.google.com/appengine/docs/java/gettingstarted/

and make sure you can run Appengine apps locally.


3.  WeScheme also uses the Google Closure library:

   http://code.google.com/closure/library/docs/gettingstarted.html

to manage the dependencies between the JavaScript modules and do
JavaScript minimization.  The WeScheme repository has a copy of the
closure library that will be automatically installed when
build-console-and-editor.rkt is executed.  (See Step 3 of Installing
WeScheme for local development).



Our current build tools assume a Unix-like environment to run shell
commands.



----------------------------------------------------------------------

Installing WeScheme for local development


1.  First, check out the WeScheme repository from Github.

   $ git clone git://github.com/dyoo/WeScheme.git

Don't forget: we're using git submodules, so also make sure to:

   $ git submodule init
   $ git submodule update

to grab the external dependendies as well.  As of this writing, the
external dependency is CodeMirror.


2. You might also need to change wescheme.properties if you are
doing any development on the android packager or compilation server.
You probably don't need to touch this unless you really know what
you're doing.


3.  Run 'build-console-and-editor.rkt'.

THIS STEP IS IMPORTANT!

The script "build-console-and-editor.rkt" must be executed after any
changes are made to the javascript source files in war-src/js.  The
webapp itself uses files in war, which are built by
build-console-and-editor.  Also, the builder also re-compresses
JavaScript files (such as CodeMirror 2) with the Closure Compiler, so
you must run this every time you change the JavaScript files.



----------------------------------------------------------------------

The directory structure of WeScheme is a fairly typical Java web app.
The majority of the JavaScript files are located in:

   war-src/js

which are packaged up via Closure into single JavaScript files, one
per application page.

    console: war/console.jsp, war/js/console-calc.js
    view: war/view.jsp, war/js/view-calc.js
    openEditor: war/openEditor/index.jsp, war/js/openEditor-calc.js

----------------------------------------------------------------------
Things still to change, from summer 2012:
some read errors like 1/0 (first ') ````,,,, not highlighted
#(1234)
(cond [4 5])  -> if: expected a boolean value, but found: 4 Shouldn't say "if"
Wording choices like "found" vs. "given" and "but got 4" vs "but found: 4"
remove "other arguments were" piece?
greens look weird, color space????
(list (define x 5)) -> define: this variable is not defined should read "define: found a definition that is not at the top level"
(x) -> x: this variable is not defined should read "this function is not defined"

To turn off color highlighting, change the colors in war-src/js/openEditor/interaction.js to white (i.e. new Color(255, 255, 255)).

To use selenium test suite:
1. install firefox
2. install selenium IDE @ http://seleniumhq.org/download/
3. open up firefox
4. to open selenium, in firefox go to Tools -> Selenium IDE
5. in the IDE, go to File -> Open Test Suite
6. open full suite in testing/
7. run with the green arrows in the IDE
